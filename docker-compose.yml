services:
  anteiku_kohi_database:
    image: postgres:latest
    container_name: anteiku_kohi_database
    restart: unless-stopped
    env_file:
      - .env.database
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}
      interval: 10s
      retries: 5
      start_period: 30s

  anteiku_kohi_redis:
    image: redis:latest
    container_name: anteiku_kohi_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --save 60 1 --loglevel warning
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  anteiku_kohi_redlock_1:
    image: redis:latest
    container_name: anteiku_kohi_redlock_1
    restart: unless-stopped
    ports:
      - "6380:6379"
    volumes:
      - redlock_1:/data
    command: redis-server --save 60 1 --loglevel warning
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  anteiku_kohi_redlock_2:
    image: redis:latest
    container_name: anteiku_kohi_redlock_2
    restart: unless-stopped
    ports:
      - "6381:6379"
    volumes:
      - redlock_2:/data
    command: redis-server --save 60 1 --loglevel warning
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  anteiku_kohi_redlock_3:
    image: redis:latest
    container_name: anteiku_kohi_redlock_3
    restart: unless-stopped
    ports:
      - "6382:6379"
    volumes:
      - redlock_3:/data
    command: redis-server --save 60 1 --loglevel warning
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  anteiku_kohi_redisinsight:
    image: redislabs/redisinsight:latest
    container_name: anteiku_kohi_redisinsight
    restart: unless-stopped
    ports:
      - "5540:5540"
    volumes:
      - redisinsight_data:/db

  anteiku_kohi:
    build: .
    container_name: anteiku_kohi
    restart: unless-stopped
    depends_on:
      anteiku_kohi_database:
        condition: service_healthy
      anteiku_kohi_redis:
        condition: service_healthy
      anteiku_kohi_redlock_1:
        condition: service_healthy
      anteiku_kohi_redlock_2:
        condition: service_healthy
      anteiku_kohi_redlock_3:
        condition: service_healthy
    env_file:
      - .env.app
    ports:
      - "8000:8000"
    volumes:
      - ./src:/app/src
      - ./alembic:/app/alembic
      - ./alembic.ini:/app/alembic.ini
      - meal_images:/public/images

volumes:
  postgres_data:
  meal_images:
  redis_data:
  redlock_1:
  redlock_2:
  redlock_3:
  redisinsight_data:
